// <auto-generated />
using System;
using BlogServerSide.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlogServerSide.Migrations
{
    [DbContext(typeof(BlogContext))]
    partial class BlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("BlogServerSide.DataBase.Category", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Categorys");

                    b
                        .HasAnnotation("Cosmos:ContainerName", "Categories");

                    b.HasData(
                        new
                        {
                            id = "17d5c742-bb4f-4119-9216-721b9eb656df",
                            Content = "Discussions about Blazor and this blog site.",
                            Slug = "blazor",
                            Title = "Blazor"
                        });
                });

            modelBuilder.Entity("BlogServerSide.DataBase.Post", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT");

                    b.Property<string>("SplashImageURL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Posts");

                    b
                        .HasAnnotation("Cosmos:ContainerName", "Posts");
                });

            modelBuilder.Entity("BlogServerSide.DataBase.User", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Photo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Users");

                    b
                        .HasAnnotation("Cosmos:ContainerName", "Users");

                    b.HasData(
                        new
                        {
                            id = "100090254159622635325",
                            Email = "hollas@gmail.com",
                            FirstName = "Michael",
                            LastName = "Hollas",
                            RegisteredAt = new DateTime(2022, 3, 15, 9, 28, 32, 776, DateTimeKind.Local).AddTicks(118),
                            Role = "Admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
